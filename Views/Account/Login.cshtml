@{
    ViewData["Title"] = "Login";
    var nonce = ViewData["Nonce"] as string ?? ""; // ✅ Prevent null error
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <h2 class="text-center">Login</h2>

            <div id="errorMessage" class="alert alert-danger d-none" role="alert"></div>

            <div id="loginForm">
                <div class="mb-3">
                    <label for="username" class="form-label">Username:</label>
                    <input type="text" class="form-control" id="username" required />
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password:</label>
                    <input type="password" class="form-control" id="password" required />
                </div>
                <input type="hidden" id="nonce" value="@nonce" />
                <button type="button" onclick="login()" class="btn btn-primary w-100 mb-3">Login</button>
                <a class="btn btn-primary w-100" href="/api/auth/login-google">
                    <img src="https://developers.google.com/identity/images/g-logo.png" width="20" height="20" alt="Google logo" />
                    Login with Google
                </a>
            </div>
            <p class="mt-3 text-center">
                Don't have an account? <a href="/Account/Register">Register here</a>
            </p>
        </div>
    </div>
</div>
<script>
    async function login() {
        const username = document.getElementById("username").value.trim();
        const password = document.getElementById("password").value.trim();

        if (!username || !password) {
            showError("Username and Password are required!");
            return;
        }

        const payload = { username, password };

        try {
            const response = await fetch('/api/auth/login', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            });

            const data = await response.json();

            if (!response.ok) {
                showError(data.message || "Login failed.");
                return;
            }

            // ✅ Save user session (Optional)
            localStorage.setItem("username", data.username);

            // ✅ Redirect after login success
            alert(data.message);
            window.location.href = "/Home/Index"; 

        } catch (error) {
            console.error("❌ Login Error:", error);
            showError("Network error. Try again.");
        }
    }

    function showError(message) {
        const errorMessageDiv = document.getElementById("errorMessage");
        errorMessageDiv.textContent = message;
        errorMessageDiv.classList.remove("d-none");
    }

</script>


